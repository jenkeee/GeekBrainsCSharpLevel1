using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Console;

namespace ConsoleApp4Ege
{
    class Program
    {
        /// <summary>
        /// Задача 4
        /// *Задача ЕГЭ.
        /// На вход программе подаются сведения о сдаче экзаменов учениками 9-х классов некоторой средней школы. В первой строке
        /// сообщается количество учеников N, которое не меньше 10, но не превосходит 100, каждая из следующих N строк имеет следующий формат:
        /// <Фамилия> <Имя> <оценки>,
        /// где <Фамилия> — строка, состоящая не более чем из 20 символов, <Имя> — строка, состоящая не более чем из 15 символов,
        /// <оценки> — через пробел три целых числа, соответствующие оценкам по пятибалльной системе. <Фамилия> и <Имя>, а также
        /// <Имя> и <оценки> разделены одним пробелом. Пример входной строки:
        /// Иванов Петр 4 5 3
        /// Требуется написать как можно более эффективную программу, которая будет выводить на экран фамилии и имена трёх худших
        /// по среднему баллу учеников. Если среди остальных есть ученики, набравшие тот же средний балл, что и один из трёх худших,
        /// следует вывести и их фамилии и имена.
        /// Рассахатский
        /// </summary>
        static void Main()
        {
            MyHelper.MyHeader(text: "Задача 4. Задача ЕГЭ.");
            ///////////////////////////////////////////////////////////////////////////////////
            Students students;
            try
            {
                students = new Students(@"..\..\Data.txt"); //получение данных из файла
            }
            catch (Exception exc)
            {
                MyHelper.MyPause("Ошибка! Не удалось получить данные из файла." + exc.Message);
                return;
            }
            WriteLine("Все ученики со средними оценками:");
            for (int i = 0; i < students.Length; i++)
            {
                Write($"{students[i], - 30}");
            }
            MyHelper.MyPause();
            ///////////////////////////////////////////////////////////////////////////////////
            WriteLine("Самые косячные ученики:");
            foreach (string s in students.GetDummersStudents())
            {
                Write($"{s, - 30}");
            }
            //Students.MakeSampleFile();
            ///////////////////////////////////////////////////////////////////////////////////
            MyHelper.MyFooter();

        }
    }
}
